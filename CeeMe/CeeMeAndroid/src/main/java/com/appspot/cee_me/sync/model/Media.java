/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-10-30 15:57:41 UTC)
 * on 2013-11-11 at 01:09:28 UTC 
 * Modify at your own risk.
 */

package com.appspot.cee_me.sync.model;

/**
 * Model definition for Media.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the sync. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Media extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String comments;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DateTime creationDate;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double latitude;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double longitude;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mediaKey;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mimeType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sha256;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long size;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private User uploader;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long views;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getComments() {
    return comments;
  }

  /**
   * @param comments comments or {@code null} for none
   */
  public Media setComments(java.lang.String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public DateTime getCreationDate() {
    return creationDate;
  }

  /**
   * @param creationDate creationDate or {@code null} for none
   */
  public Media setCreationDate(DateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFileName() {
    return fileName;
  }

  /**
   * @param fileName fileName or {@code null} for none
   */
  public Media setFileName(java.lang.String fileName) {
    this.fileName = fileName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getLatitude() {
    return latitude;
  }

  /**
   * @param latitude latitude or {@code null} for none
   */
  public Media setLatitude(java.lang.Double latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getLongitude() {
    return longitude;
  }

  /**
   * @param longitude longitude or {@code null} for none
   */
  public Media setLongitude(java.lang.Double longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getMediaKey() {
    return mediaKey;
  }

  /**
   * @param mediaKey mediaKey or {@code null} for none
   */
  public Media setMediaKey(java.lang.String mediaKey) {
    this.mediaKey = mediaKey;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getMimeType() {
    return mimeType;
  }

  /**
   * @param mimeType mimeType or {@code null} for none
   */
  public Media setMimeType(java.lang.String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * @see #decodeSha256()
   * @return value or {@code null} for none
   */
  public java.lang.String getSha256() {
    return sha256;
  }

  /**

   * @see #getSha256()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodeSha256() {
    return com.google.api.client.util.Base64.decodeBase64(sha256);
  }

  /**
   * @see #encodeSha256()
   * @param sha256 sha256 or {@code null} for none
   */
  public Media setSha256(java.lang.String sha256) {
    this.sha256 = sha256;
    return this;
  }

  /**

   * @see #setSha256()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public Media encodeSha256(byte[] sha256) {
    this.sha256 = com.google.api.client.util.Base64.encodeBase64URLSafeString(sha256);
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getSize() {
    return size;
  }

  /**
   * @param size size or {@code null} for none
   */
  public Media setSize(java.lang.Long size) {
    this.size = size;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public User getUploader() {
    return uploader;
  }

  /**
   * @param uploader uploader or {@code null} for none
   */
  public Media setUploader(User uploader) {
    this.uploader = uploader;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getViews() {
    return views;
  }

  /**
   * @param views views or {@code null} for none
   */
  public Media setViews(java.lang.Long views) {
    this.views = views;
    return this;
  }

  @Override
  public Media set(String fieldName, Object value) {
    return (Media) super.set(fieldName, value);
  }

  @Override
  public Media clone() {
    return (Media) super.clone();
  }

}
