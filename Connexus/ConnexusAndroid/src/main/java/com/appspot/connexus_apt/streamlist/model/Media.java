/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-09-16 16:01:30 UTC)
 * on 2013-10-08 at 01:40:14 UTC 
 * Modify at your own risk.
 */

package com.appspot.connexus_apt.streamlist.model;

/**
 * Model definition for Media.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the streamlist. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Media extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String comments;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime creationDate;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fileName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mimeType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer queryIndex;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer queryLimit;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer queryOffset;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long size;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long streamId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long streamOwnerId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String thumbUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uploader;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long views;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getComments() {
    return comments;
  }

  /**
   * @param comments comments or {@code null} for none
   */
  public Media setComments(java.lang.String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getCreationDate() {
    return creationDate;
  }

  /**
   * @param creationDate creationDate or {@code null} for none
   */
  public Media setCreationDate(com.google.api.client.util.DateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFileName() {
    return fileName;
  }

  /**
   * @param fileName fileName or {@code null} for none
   */
  public Media setFileName(java.lang.String fileName) {
    this.fileName = fileName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Media setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getMimeType() {
    return mimeType;
  }

  /**
   * @param mimeType mimeType or {@code null} for none
   */
  public Media setMimeType(java.lang.String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getQueryIndex() {
    return queryIndex;
  }

  /**
   * @param queryIndex queryIndex or {@code null} for none
   */
  public Media setQueryIndex(java.lang.Integer queryIndex) {
    this.queryIndex = queryIndex;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getQueryLimit() {
    return queryLimit;
  }

  /**
   * @param queryLimit queryLimit or {@code null} for none
   */
  public Media setQueryLimit(java.lang.Integer queryLimit) {
    this.queryLimit = queryLimit;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getQueryOffset() {
    return queryOffset;
  }

  /**
   * @param queryOffset queryOffset or {@code null} for none
   */
  public Media setQueryOffset(java.lang.Integer queryOffset) {
    this.queryOffset = queryOffset;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getSize() {
    return size;
  }

  /**
   * @param size size or {@code null} for none
   */
  public Media setSize(java.lang.Long size) {
    this.size = size;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getStreamId() {
    return streamId;
  }

  /**
   * @param streamId streamId or {@code null} for none
   */
  public Media setStreamId(java.lang.Long streamId) {
    this.streamId = streamId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getStreamOwnerId() {
    return streamOwnerId;
  }

  /**
   * @param streamOwnerId streamOwnerId or {@code null} for none
   */
  public Media setStreamOwnerId(java.lang.Long streamOwnerId) {
    this.streamOwnerId = streamOwnerId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getThumbUrl() {
    return thumbUrl;
  }

  /**
   * @param thumbUrl thumbUrl or {@code null} for none
   */
  public Media setThumbUrl(java.lang.String thumbUrl) {
    this.thumbUrl = thumbUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUploader() {
    return uploader;
  }

  /**
   * @param uploader uploader or {@code null} for none
   */
  public Media setUploader(java.lang.String uploader) {
    this.uploader = uploader;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * @param url url or {@code null} for none
   */
  public Media setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getViews() {
    return views;
  }

  /**
   * @param views views or {@code null} for none
   */
  public Media setViews(java.lang.Long views) {
    this.views = views;
    return this;
  }

  @Override
  public Media set(String fieldName, Object value) {
    return (Media) super.set(fieldName, value);
  }

  @Override
  public Media clone() {
    return (Media) super.clone();
  }

}
