/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-09-16 16:01:30 UTC)
 * on 2013-10-11 at 01:28:41 UTC 
 * Modify at your own risk.
 */

package com.appspot.connexus_apt.streamlist;

/**
 * Service definition for Streamlist (v1).
 *
 * <p>
 * Retrieve Connex.us photo streams.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link StreamlistRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Streamlist extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.17.0-rc of the streamlist library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://connexus-apt.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "streamlist/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Streamlist(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Streamlist(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getMedia".
   *
   * This request holds the parameters needed by the streamlist server.  After setting any optional
   * parameters, call the {@link GetMedia#execute()} method to invoke the remote operation.
   *
   * @param streamId
   * @param streamOwnerId
   * @param queryLimit
   * @param queryOffset
   * @return the request
   */
  public GetMedia getMedia(java.lang.Long streamId, java.lang.Long streamOwnerId, java.lang.Integer queryLimit, java.lang.Integer queryOffset) throws java.io.IOException {
    GetMedia result = new GetMedia(streamId, streamOwnerId, queryLimit, queryOffset);
    initialize(result);
    return result;
  }

  public class GetMedia extends StreamlistRequest<com.appspot.connexus_apt.streamlist.model.StreamResult> {

    private static final String REST_PATH = "streamresult/{streamId}/{streamOwnerId}/{queryLimit}/{queryOffset}";

    /**
     * Create a request for the method "getMedia".
     *
     * This request holds the parameters needed by the the streamlist server.  After setting any
     * optional parameters, call the {@link GetMedia#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetMedia#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param streamId
     * @param streamOwnerId
     * @param queryLimit
     * @param queryOffset
     * @since 1.13
     */
    protected GetMedia(java.lang.Long streamId, java.lang.Long streamOwnerId, java.lang.Integer queryLimit, java.lang.Integer queryOffset) {
      super(Streamlist.this, "GET", REST_PATH, null, com.appspot.connexus_apt.streamlist.model.StreamResult.class);
      this.streamId = com.google.api.client.util.Preconditions.checkNotNull(streamId, "Required parameter streamId must be specified.");
      this.streamOwnerId = com.google.api.client.util.Preconditions.checkNotNull(streamOwnerId, "Required parameter streamOwnerId must be specified.");
      this.queryLimit = com.google.api.client.util.Preconditions.checkNotNull(queryLimit, "Required parameter queryLimit must be specified.");
      this.queryOffset = com.google.api.client.util.Preconditions.checkNotNull(queryOffset, "Required parameter queryOffset must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMedia setAlt(java.lang.String alt) {
      return (GetMedia) super.setAlt(alt);
    }

    @Override
    public GetMedia setFields(java.lang.String fields) {
      return (GetMedia) super.setFields(fields);
    }

    @Override
    public GetMedia setKey(java.lang.String key) {
      return (GetMedia) super.setKey(key);
    }

    @Override
    public GetMedia setOauthToken(java.lang.String oauthToken) {
      return (GetMedia) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMedia setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMedia) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMedia setQuotaUser(java.lang.String quotaUser) {
      return (GetMedia) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMedia setUserIp(java.lang.String userIp) {
      return (GetMedia) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long streamId;

    /**

     */
    public java.lang.Long getStreamId() {
      return streamId;
    }

    public GetMedia setStreamId(java.lang.Long streamId) {
      this.streamId = streamId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long streamOwnerId;

    /**

     */
    public java.lang.Long getStreamOwnerId() {
      return streamOwnerId;
    }

    public GetMedia setStreamOwnerId(java.lang.Long streamOwnerId) {
      this.streamOwnerId = streamOwnerId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer queryLimit;

    /**

     */
    public java.lang.Integer getQueryLimit() {
      return queryLimit;
    }

    public GetMedia setQueryLimit(java.lang.Integer queryLimit) {
      this.queryLimit = queryLimit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer queryOffset;

    /**

     */
    public java.lang.Integer getQueryOffset() {
      return queryOffset;
    }

    public GetMedia setQueryOffset(java.lang.Integer queryOffset) {
      this.queryOffset = queryOffset;
      return this;
    }

    @Override
    public GetMedia set(String parameterName, Object value) {
      return (GetMedia) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getStreams".
   *
   * This request holds the parameters needed by the streamlist server.  After setting any optional
   * parameters, call the {@link GetStreams#execute()} method to invoke the remote operation.
   *
   * @param queryLimit
   * @param queryOffset
   * @return the request
   */
  public GetStreams getStreams(java.lang.Integer queryLimit, java.lang.Integer queryOffset) throws java.io.IOException {
    GetStreams result = new GetStreams(queryLimit, queryOffset);
    initialize(result);
    return result;
  }

  public class GetStreams extends StreamlistRequest<com.appspot.connexus_apt.streamlist.model.StreamCollection> {

    private static final String REST_PATH = "streamcollection/{queryLimit}/{queryOffset}";

    /**
     * Create a request for the method "getStreams".
     *
     * This request holds the parameters needed by the the streamlist server.  After setting any
     * optional parameters, call the {@link GetStreams#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetStreams#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param queryLimit
     * @param queryOffset
     * @since 1.13
     */
    protected GetStreams(java.lang.Integer queryLimit, java.lang.Integer queryOffset) {
      super(Streamlist.this, "GET", REST_PATH, null, com.appspot.connexus_apt.streamlist.model.StreamCollection.class);
      this.queryLimit = com.google.api.client.util.Preconditions.checkNotNull(queryLimit, "Required parameter queryLimit must be specified.");
      this.queryOffset = com.google.api.client.util.Preconditions.checkNotNull(queryOffset, "Required parameter queryOffset must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetStreams setAlt(java.lang.String alt) {
      return (GetStreams) super.setAlt(alt);
    }

    @Override
    public GetStreams setFields(java.lang.String fields) {
      return (GetStreams) super.setFields(fields);
    }

    @Override
    public GetStreams setKey(java.lang.String key) {
      return (GetStreams) super.setKey(key);
    }

    @Override
    public GetStreams setOauthToken(java.lang.String oauthToken) {
      return (GetStreams) super.setOauthToken(oauthToken);
    }

    @Override
    public GetStreams setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetStreams) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetStreams setQuotaUser(java.lang.String quotaUser) {
      return (GetStreams) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetStreams setUserIp(java.lang.String userIp) {
      return (GetStreams) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer queryLimit;

    /**

     */
    public java.lang.Integer getQueryLimit() {
      return queryLimit;
    }

    public GetStreams setQueryLimit(java.lang.Integer queryLimit) {
      this.queryLimit = queryLimit;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer queryOffset;

    /**

     */
    public java.lang.Integer getQueryOffset() {
      return queryOffset;
    }

    public GetStreams setQueryOffset(java.lang.Integer queryOffset) {
      this.queryOffset = queryOffset;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Boolean mySubs;

    /**

     */
    public java.lang.Boolean getMySubs() {
      return mySubs;
    }

    public GetStreams setMySubs(java.lang.Boolean mySubs) {
      this.mySubs = mySubs;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double longitude;

    /**

     */
    public java.lang.Double getLongitude() {
      return longitude;
    }

    public GetStreams setLongitude(java.lang.Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Double latitude;

    /**

     */
    public java.lang.Double getLatitude() {
      return latitude;
    }

    public GetStreams setLatitude(java.lang.Double latitude) {
      this.latitude = latitude;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String query;

    /**

     */
    public java.lang.String getQuery() {
      return query;
    }

    public GetStreams setQuery(java.lang.String query) {
      this.query = query;
      return this;
    }

    @Override
    public GetStreams set(String parameterName, Object value) {
      return (GetStreams) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Streamlist}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Streamlist}. */
    @Override
    public Streamlist build() {
      return new Streamlist(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link StreamlistRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setStreamlistRequestInitializer(
        StreamlistRequestInitializer streamlistRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(streamlistRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
